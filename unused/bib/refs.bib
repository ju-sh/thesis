% Encoding: UTF-8


@inproceedings{gordon2003executing,
  title={Executing the formal semantics of the Accellera property specification language by mechanised theorem proving},
  author={Gordon, Mike and Hurd, Joe and Slind, Konrad},
  booktitle={CHARME},
  pages={200--215},
  year={2003},
  organization={Springer}
}



@InProceedings{turing1989checking,
  author    = {Turing, Alan},
  title     = {Checking a large routine},
  booktitle = {The early British computer conferences},
  year      = {1989},
  pages     = {70--72},
}

@Article{10.2307/2274902,
  author    = {Solomon Feferman},
  title     = {Reflecting on Incompleteness},
  journal   = {The Journal of Symbolic Logic},
  year      = {1991},
  volume    = {56},
  number    = {1},
  pages     = {1--49},
  issn      = {00224812},
  url       = {http://www.jstor.org/stable/2274902},
  publisher = {Association for Symbolic Logic},
}

@Article{LEROY2000,
  author    = {LEROY, XAVIER},
  title     = {A modular module system},
  journal   = {Journal of Functional Programming},
  year      = {2000},
  volume    = {10},
  number    = {3},
  pages     = {269--303},
  doi       = {10.1017/S0956796800003683},
  publisher = {Cambridge University Press},
}

@Book{DijkstraTesting,
  title  = {Software Engineering Techniques: Report of a Conference Sponsored by the NATO Science Committee, Rome, Italy, 27-31 Oct. 1969, Brussels, Scientific Affairs Division, NATO},
  year   = {1970},
  author = {Buxton, J. N. and Randell, B.},
}

@Book{eisner2007practical,
  title     = {A practical introduction to PSL},
  publisher = {Springer Science \& Business Media},
  year      = {2007},
  author    = {Eisner, Cindy and Fisman, Dana},
}

@Article{psl2010Std,
  title   = {IEEE Standard for Property Specification Language (PSL)},
  journal = {IEEE Std 1850-2010 (Revision of IEEE Std 1850-2005)},
  year    = {2010},
  pages   = {1-182},
  doi     = {10.1109/IEEESTD.2010.5446004},
}

@Book{joyce1990formal,
  title     = {From formal verification to silicon compilation},
  publisher = {University of British Columbia, Department of Computer Science},
  year      = {1990},
  author    = {Joyce, Jeffrey J and Liu, Erwin and Rushby, John M and Shankar, Natarajan and Suaya, Roberto and von Henke, Friedrich W},
}

@Article{turing1936computable,
  author  = {Turing, Alan Mathison and others},
  title   = {On computable numbers, with an application to the Entscheidungsproblem},
  journal = {J. of Math},
  year    = {1936},
  volume  = {58},
  number  = {345-363},
  pages   = {5},
}

@Book{Russell1910-RUSPMV,
  title     = {Principia Mathematica Vol. I},
  publisher = {Cambridge University Press},
  year      = {1910},
  author    = {Bertrand Russell and Alfred North Whitehead},
}

@Article{wadler2015propositions,
  author    = {Wadler, Philip},
  title     = {Propositions as types},
  journal   = {Communications of the ACM},
  year      = {2015},
  volume    = {58},
  number    = {12},
  pages     = {75--84},
  publisher = {ACM New York, NY, USA},
}

@Article{bjesse1998lava,
  author    = {Bjesse, Per and Claessen, Koen and Sheeran, Mary and Singh, Satnam},
  title     = {Lava: hardware design in Haskell},
  journal   = {ACM SIGPLAN Notices},
  year      = {1998},
  volume    = {34},
  number    = {1},
  pages     = {174--184},
  publisher = {ACM New York, NY, USA},
}

@Book{chlipala2022certified,
  title     = {Certified programming with dependent types: a pragmatic introduction to the Coq proof assistant},
  publisher = {MIT Press},
  year      = {2022},
  author    = {Chlipala, Adam},
}

@InProceedings{chlipala2008parametric,
  author    = {Chlipala, Adam},
  title     = {Parametric higher-order abstract syntax for mechanized semantics},
  booktitle = {Proceedings of the 13th ACM SIGPLAN international conference on Functional programming},
  year      = {2008},
  pages     = {143--156},
}

@Article{xia2019interaction,
  author  = {Xia, Li-yao and Zakowski, Yannick and He, Paul and Hur, Chung-Kil and Malecha, Gregory and Pierce, Benjamin C and Zdancewic, Steve},
  title   = {Interaction trees: representing recursive and impure programs in Coq},
  journal = {arXiv preprint arXiv:1906.00046},
  year    = {2019},
}

@Article{chappe2023choice,
  author    = {Chappe, Nicolas and He, Paul and Henrio, Ludovic and Zakowski, Yannick and Zdancewic, Steve},
  title     = {Choice Trees: Representing Nondeterministic, Recursive, and Impure Programs in Coq},
  journal   = {Proceedings of the ACM on Programming Languages},
  year      = {2023},
  volume    = {7},
  number    = {POPL},
  pages     = {1770--1800},
  publisher = {ACM New York, NY, USA},
}

@Article{pit2021experience,
  author  = {Pit-Claudel, Cl{\'e}ment and Bourgeat, Thomas},
  title   = {An experience report on writing usable DSLs in Coq},
  journal = {CoqPL’21: TheSeventhInternationalWorkshoponCoqforPL},
  year    = {2021},
}

@InProceedings{bourgeat2020essence,
  author    = {Bourgeat, Thomas and Pit-Claudel, Cl{\'e}ment and Chlipala, Adam and Arvind},
  title     = {The essence of Bluespec: a core language for rule-based hardware design},
  booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2020},
  pages     = {243--257},
}

@Article{choi2017kami,
  author    = {Choi, Joonwon and Vijayaraghavan, Muralidaran and Sherman, Benjamin and Chlipala, Adam and Arvind},
  title     = {Kami: a platform for high-level parametric hardware specification and its modular verification},
  journal   = {Proceedings of the ACM on Programming Languages},
  year      = {2017},
  volume    = {1},
  number    = {ICFP},
  pages     = {1--30},
  publisher = {ACM New York, NY, USA},
}

@InProceedings{danvy2001defunctionalization,
  author    = {Danvy, Olivier and Nielsen, Lasse R},
  title     = {Defunctionalization at work},
  booktitle = {Proceedings of the 3rd ACM SIGPLAN international conference on Principles and practice of declarative programming},
  year      = {2001},
  pages     = {162--174},
  review    = {https://www.brics.dk/RS/01/23/BRICS-RS-01-23.pdf},
}

@InProceedings{oliveira2012functional,
  author    = {Oliveira, Bruno CdS and Cook, William R},
  title     = {Functional programming with structured graphs},
  booktitle = {Proceedings of the 17th ACM SIGPLAN international conference on Functional programming},
  year      = {2012},
  pages     = {77--88},
}

@Book{appel2007compiling,
  title     = {Compiling with continuations},
  publisher = {Cambridge university press},
  year      = {2007},
  author    = {Appel, Andrew W},
}

@InProceedings{braibant2013formal,
  author       = {Braibant, Thomas and Chlipala, Adam},
  title        = {Formal verification of hardware synthesis},
  booktitle    = {Computer Aided Verification: 25th International Conference, CAV 2013, Saint Petersburg, Russia, July 13-19, 2013. Proceedings 25},
  year         = {2013},
  pages        = {213--228},
  organization = {Springer},
}

@InProceedings{braibant2011coquet,
  author       = {Braibant, Thomas},
  title        = {Coquet: a Coq library for verifying hardware},
  booktitle    = {Certified Programs and Proofs: First International Conference, CPP 2011, Kenting, Taiwan, December 7-9, 2011. Proceedings 1},
  year         = {2011},
  pages        = {330--345},
  organization = {Springer},
}

@InProceedings{pnueli2006psl,
  author       = {Pnueli, Amir and Zaks, Aleksandr},
  title        = {PSL model checking and run-time verification via testers},
  booktitle    = {FM 2006: Formal Methods: 14th International Symposium on Formal Methods, Hamilton, Canada, August 21-27, 2006. Proceedings 14},
  year         = {2006},
  pages        = {573--586},
  organization = {Springer},
}

@Article{falcone2021taxonomy,
  author    = {Falcone, Yli{\`e}s and Krsti{\'c}, Sr{\dj}an and Reger, Giles and Traytel, Dmitriy},
  title     = {A taxonomy for classifying runtime verification tools},
  journal   = {International Journal on Software Tools for Technology Transfer},
  year      = {2021},
  volume    = {23},
  number    = {2},
  pages     = {255--284},
  publisher = {Springer},
  review    = {This wasn't the paper that I thought it was. I haven't yet read this.},
}

@Article{peled2019refining,
  author    = {Peled, Doron and Havelund, Klaus},
  title     = {Refining the safety--liveness classification of temporal properties according to monitorability},
  journal   = {Models, Mindsets, Meta: The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday},
  year      = {2019},
  pages     = {218--234},
  publisher = {Springer},
}

@Article{garfinkel2005history,
  author  = {Garfinkel, Simson},
  title   = {History’s worst software bugs},
  journal = {Wired News, Nov},
  year    = {2005},
  review  = {A list of expensive software? bugs along with a very brief descripiton.

Use as a footnote. Not a citation.},
}

@InProceedings{baaij2010c,
  author       = {Baaij, Christiaan and Kooijman, Matthijs and Kuper, Jan and Boeijink, Arjan and Gerards, Marco},
  title        = {C? ash: Structural descriptions of synchronous hardware using haskell},
  booktitle    = {2010 13th Euromicro Conference on Digital System Design: Architectures, Methods and Tools},
  year         = {2010},
  pages        = {714--721},
  organization = {IEEE},
}

@InProceedings{coquand2011decision,
  author       = {Coquand, Thierry and Siles, Vincent},
  title        = {A decision procedure for regular expression equivalence in type theory},
  booktitle    = {International Conference on Certified Programs and Proofs},
  year         = {2011},
  pages        = {119--134},
  organization = {Springer},
}

@InProceedings{braibant2010efficient,
  author       = {Braibant, Thomas and Pous, Damien},
  title        = {An efficient Coq tactic for deciding Kleene algebras},
  booktitle    = {International Conference on Interactive Theorem Proving},
  year         = {2010},
  pages        = {163--178},
  organization = {Springer},
}

@Article{boule2008automata,
  author    = {Boule, Marc and Zilic, Zeljko},
  title     = {Automata-based assertion-checker synthesis of PSL properties},
  journal   = {ACM Transactions on Design Automation of Electronic Systems (TODAES)},
  year      = {2008},
  volume    = {13},
  number    = {1},
  pages     = {1--21},
  publisher = {ACM New York, NY, USA},
}

@TechReport{perez2020copilot,
  author = {Perez, Ivan and Dedden, Frank and Goodloe, Alwyn},
  title  = {Copilot 3},
  year   = {2020},
}

@InProceedings{pike2010copilot,
  author       = {Pike, Lee and Goodloe, Alwyn and Morisset, Robin and Niller, Sebastian},
  title        = {Copilot: A hard real-time runtime monitor},
  booktitle    = {International Conference on Runtime Verification},
  year         = {2010},
  pages        = {345--359},
  organization = {Springer},
}

@Article{scott2023trustworthy,
  author = {SCOTT, RYAN G and DODDS, MIKE and PEREZ, IVAN and GOODLOE, ALWYN E and DOCKINS, ROBERT},
  title  = {Trustworthy Runtime Verification via Bisimulation (Experience Report)},
  year   = {2023},
}

@TechReport{goodloe2010monitoring,
  author = {Goodloe, Alwyn E and Pike, Lee},
  title  = {Monitoring distributed real-time systems: A survey and future directions},
  year   = {2010},
}

@Article{macaulay2008atsb,
  author  = {Macaulay, Kerryn},
  title   = {ATSB preliminary factual report, in-flight upset, Qantas Airbus A330, 154 Km West of Learmonth, WA, 7 October 2008},
  journal = {Australian Transport Safety Bureau Media Release},
  year    = {2008},
  volume  = {14},
  url     = {http://web.archive.org/web/20121116102435/http://www.atsb.gov.au/newsroom/2008/release/2008_45.aspx},
}

@Article{bergin2008faulty,
  author  = {Bergin, C},
  title   = {Faulty MDM removed},
  journal = {NASA Spaceflight. com, May},
  year    = {2008},
  volume  = {18},
  url     = {http://web.archive.org/web/20150921135550/http://www.nasaspaceflight.com/2008/05/sts-124-frr-debate-outstanding-issues-faulty-mdm-removed/},
}

@Misc{lions1996ariane,
  author    = {Lions, Jacques-Louis and Luebeck, Lennart and Fauquembergue, Jean-Luc and Kahn, Gilles and Kubbat, Wolfgang and Levedag, Stefan and Mazzini, Leonardo and Merle, Didier and O’Halloran, Colin},
  title     = {Ariane 5 flight 501 failure report by the inquiry board},
  year      = {1996},
  publisher = {european space agency Paris},
  review    = {This is a less formal analysis: Nuseibeh, B., 1997. Ariane 5: who dunnit?. IEEE Software, 14(3), p.15.},
}

@Article{leveson1993investigation,
  author    = {Leveson, Nancy G and Turner, Clark S},
  title     = {An investigation of the Therac-25 accidents},
  journal   = {Computer},
  year      = {1993},
  volume    = {26},
  number    = {7},
  pages     = {18--41},
  publisher = {IEEE},
}

@Article{price1995pentium,
  author    = {Price, Dick},
  title     = {Pentium FDIV flaw-lessons learned},
  journal   = {IEEE Micro},
  year      = {1995},
  volume    = {15},
  number    = {2},
  pages     = {86--88},
  publisher = {IEEE},
}

@InProceedings{letouzey2008extraction,
  author       = {Letouzey, Pierre},
  title        = {Extraction in coq: An overview},
  booktitle    = {Logic and Theory of Algorithms: 4th Conference on Computability in Europe, CiE 2008, Athens, Greece, June 15-20, 2008 Proceedings 4},
  year         = {2008},
  pages        = {359--369},
  organization = {Springer},
}

@InProceedings{kennedy2013coq,
  author    = {Kennedy, Andrew and Benton, Nick and Jensen, Jonas B and Dagand, Pierre-Evariste},
  title     = {Coq: the world's best macro assembler?},
  booktitle = {Proceedings of the 15th Symposium on Principles and Practice of Declarative Programming},
  year      = {2013},
  pages     = {13--24},
}

@Article{parravicini2021cicero,
  author    = {Parravicini, Daniele and Conficconi, Davide and Sozzo, Emanuele Del and Pilato, Christian and Santambrogio, Marco D},
  title     = {Cicero: A domain-specific architecture for efficient regular expression matching},
  journal   = {ACM Transactions on Embedded Computing Systems (TECS)},
  year      = {2021},
  volume    = {20},
  number    = {5s},
  pages     = {1--24},
  publisher = {ACM New York, NY},
}

@Article{thompson1968programming,
  author    = {Thompson, Ken},
  title     = {Programming techniques: Regular expression search algorithm},
  journal   = {Communications of the ACM},
  year      = {1968},
  volume    = {11},
  number    = {6},
  pages     = {419--422},
  publisher = {ACM New York, NY, USA},
}

@Article{hudak1997domain,
  author  = {Hudak, Paul},
  title   = {Domain-specific languages},
  journal = {Handbook of programming languages},
  year    = {1997},
  volume  = {3},
  number  = {39-60},
  pages   = {21},
}

@Article{bentley1986programming,
  author    = {Bentley, Jon},
  title     = {Programming pearls: little languages},
  journal   = {Communications of the ACM},
  year      = {1986},
  volume    = {29},
  number    = {8},
  pages     = {711--721},
  publisher = {ACM New York, NY, USA},
}

@Article{bourgeat2021multipurpose,
  author    = {Bourgeat, Thomas and Clester, Ian and Erbsen, Andres and Gruetter, Samuel and Wright, Andrew and Chlipala, Adam},
  title     = {A multipurpose formal risc-v specification},
  journal   = {arXiv preprint arXiv:2104.00762},
  year      = {2021},
  publisher = {Apr},
}

@Article{SHI2023102986,
  author   = {ZhengPu Shi and GuoJun Xie and Gang Chen},
  title    = {CoqMatrix: Formal matrix library with multiple models in Coq},
  journal  = {Journal of Systems Architecture},
  year     = {2023},
  volume   = {143},
  pages    = {102986},
  issn     = {1383-7621},
  abstract = {Matrix theory is an important branch of mathematics with a wide range of applications. Matrix formalization in proof assistants can provide strong support for verifying system behaviors related to matrix operations. The Coq community has proposed at least five formal matrix libraries, although the Coq Standard Library has not implemented them. However, these libraries still fail to meet certain requirements: for one thing, they all implemented relatively limited matrix theories, but none of the libraries has achieved absolute dominance, making it difficult for developers to choose with confidence; and for another, due to the different definitions of the underlying matrix models, the software interfaces in these libraries are also completely different, making it difficult for developers to switch between the libraries. To address these problems, herein we undertake the following. Firstly, we analyze various implementation schemes and provide technical evaluations based on experiments and our experience. This analysis aims to assist developers in making appropriate choices. Secondly, we propose a set of unified hierarchical interfaces for the matrix elements and matrix theory, and implement an open-source multi-model formal matrix library called CoqMatrix that adheres to these interfaces. This implementation helps to decouple the strong connection between the underlying library and the upper-layer application. Moreover, we have constructed bijective conversion functions between different models, establishing connections among these models. In summary, our work offers a novel and effective solution to the challenges of multi-model and multi-application adaptability of formalized matrix theory in Coq.},
  doi      = {https://doi.org/10.1016/j.sysarc.2023.102986},
  keywords = {Coq theorem prover, Formal matrix theory, Unified matrix interface, Matrix models comparison, Isomorphic mapping, Formal vector theory, Unified vector interface},
  url      = {https://www.sciencedirect.com/science/article/pii/S1383762123001650},
}

@Article{clarke1986automatic,
  author    = {Clarke, Edmund M and Emerson, E Allen and Sistla, A Prasad},
  title     = {Automatic verification of finite-state concurrent systems using temporal logic specifications},
  journal   = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  year      = {1986},
  volume    = {8},
  number    = {2},
  pages     = {244--263},
  publisher = {ACM New York, NY, USA},
}

@Article{10.1145/3586044,
  author     = {Le Glaunec, Alexis and Kong, Lingkun and Mamouras, Konstantinos},
  title      = {Regular Expression Matching Using Bit Vector Automata},
  journal    = {Proc. ACM Program. Lang.},
  year       = {2023},
  volume     = {7},
  number     = {OOPSLA1},
  month      = {apr},
  abstract   = {Regular expressions (regexes) are ubiquitous in modern software. There is a variety of implementation techniques for regex matching, which can be roughly categorized as (1) relying on backtracking search, or (2) being based on finite-state automata. The implementations that use backtracking are often chosen due to their ability to support advanced pattern-matching constructs. Unfortunately, they are known to suffer from severe performance problems. For some regular expressions, the running time for matching can be exponential in the size of the input text. In order to provide stronger guarantees of matching efficiency, automata-based regex matching is the preferred choice. However, even these regex engines may exhibit severe performance degradation for some patterns. The main reason for this is that regexes used in practice are not exclusively built from the classical regular constructs, i.e., concatenation, nondeterministic choice and Kleene's star. They involve additional constructs that provide succinctness and convenience of expression. The most common such construct is bounded repetition (also called counting), which describes the repetition of the pattern a fixed number of times. In this paper, we propose a new algorithm for the efficient matching of regular expressions that involve bounded repetition. Our algorithms are based on a new model of automata, which we call nondeterministic bit vector automata (NBVA). This model is chosen to be expressively equivalent to nondeterministic counter automata with bounded counters, a very natural model for expressing patterns with bounded repetition. We show that there is a class of regular expressions with bounded repetition that can be matched in time that is independent from the repetition bounds. Our algorithms are general enough to cover the vast majority of challenging bounded repetitions that arise in practice. We provide an implementation of our approach in a regex engine, which we call BVA-Scan. We compare BVA-Scan against state-of-the-art regex engines on several real datasets.},
  address    = {New York, NY, USA},
  articleno  = {92},
  doi        = {10.1145/3586044},
  issue_date = {April 2023},
  keywords   = {counter automata, bounded repetition, automata theory, regex},
  numpages   = {30},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3586044},
}

@InProceedings{firsov2013certified,
  author       = {Firsov, Denis and Uustalu, Tarmo},
  title        = {Certified parsing of regular languages},
  booktitle    = {International Conference on Certified Programs and Proofs},
  year         = {2013},
  pages        = {98--113},
  organization = {Springer},
}

@InProceedings{denes2012refinement,
  author       = {D{\'e}n{\`e}s, Maxime and M{\"o}rtberg, Anders and Siles, Vincent},
  title        = {A refinement-based approach to computational algebra in Coq},
  booktitle    = {International Conference on Interactive Theorem Proving},
  year         = {2012},
  pages        = {83--98},
  organization = {Springer},
}

@Article{bauer2011runtime,
  author    = {Bauer, Andreas and Leucker, Martin and Schallhart, Christian},
  title     = {Runtime verification for LTL and TLTL},
  journal   = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  year      = {2011},
  volume    = {20},
  number    = {4},
  pages     = {1--64},
  publisher = {ACM New York, NY, USA},
}

@InProceedings{bauer2007good,
  author       = {Bauer, Andreas and Leucker, Martin and Schallhart, Christian},
  title        = {The good, the bad, and the ugly, but how ugly is ugly?},
  booktitle    = {International Workshop on Runtime Verification},
  year         = {2007},
  pages        = {126--138},
  organization = {Springer},
}

@InProceedings{10.1145/1017472.1017488,
  author    = {Kiselyov, Oleg and L\"{a}mmel, Ralf and Schupke, Keean},
  title     = {Strongly Typed Heterogeneous Collections},
  booktitle = {Proceedings of the 2004 ACM SIGPLAN Workshop on Haskell},
  year      = {2004},
  series    = {Haskell '04},
  pages     = {96–107},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A heterogeneous collection is a datatype that is capable of storing data of different types, while providing operations for look-up, update, iteration, and others. There are various kinds of heterogeneous collections, differing in representation, invariants, and access operations. We describe HLIST - a Haskell library for strongly typed heterogeneous collections including extensible records. We illustrate HLIST's benefits in the context of type-safe database access in Haskell. The HLIST library relies on common extensions of Haskell 98. Our exploration raises interesting issues regarding Haskell's type system, in particular, avoidance of overlapping instances, and reification of type equality and type unification.},
  doi       = {10.1145/1017472.1017488},
  isbn      = {1581138504},
  keywords  = {collections, type-indexed rows, haskell, type-safe database access, type improvement, extensible records, dependently typed programming, type equality},
  location  = {Snowbird, Utah, USA},
  numpages  = {12},
  url       = {https://doi.org/10.1145/1017472.1017488},
}

@InProceedings{chattopadhyay2020verified,
  author       = {Chattopadhyay, Agnishom and Mamouras, Konstantinos},
  title        = {A verified online monitor for metric temporal logic with quantitative semantics},
  booktitle    = {Runtime Verification: 20th International Conference, RV 2020, Los Angeles, CA, USA, October 6--9, 2020, Proceedings 20},
  year         = {2020},
  pages        = {383--403},
  organization = {Springer},
}

@Article{dijkstra1989cruelty,
  author  = {Dijkstra, Edsger W and others},
  title   = {On the cruelty of really teaching computing science},
  journal = {Communications of the ACM},
  year    = {1989},
  volume  = {32},
  number  = {12},
  pages   = {1398--1404},
}

@Article{ieee2005ieee,
  author  = {IEEE-Commission and others},
  title   = {IEEE standard for property specification language (PSL)},
  journal = {IEEE Std 1850-2005},
  year    = {2005},
}

@PhdThesis{bornebusch2021coq,
  author = {Bornebusch, Fritjof},
  title  = {Coq meets C$\lambda$aSH: proposing a hardware design synthesis flow that combines proof assistants with functional hardware description languages},
  school = {Universit{\"a}t Bremen},
  year   = {2021},
}

@Article{sozeau2020metacoq,
  author    = {Sozeau, Matthieu and Anand, Abhishek and Boulier, Simon and Cohen, Cyril and Forster, Yannick and Kunze, Fabian and Malecha, Gregory and Tabareau, Nicolas and Winterhalter, Th{\'e}o},
  title     = {The metacoq project},
  journal   = {Journal of automated reasoning},
  year      = {2020},
  volume    = {64},
  number    = {5},
  pages     = {947--999},
  publisher = {Springer},
}

@InProceedings{eisner2008augmenting,
  author       = {Eisner, Cindy and Fisman, Dana},
  title        = {Augmenting a regular expression-based temporal logic with local variables},
  booktitle    = {2008 Formal Methods in Computer-Aided Design},
  year         = {2008},
  pages        = {1--8},
  organization = {IEEE},
}

@Article{javaheri2016synthesis,
  author    = {Javaheri, Fatemeh Negin and Morin-Allory, Katell and Borrione, Dominique},
  title     = {Synthesis of Regular Expressions Revisited: From PSL SEREs to Hardware},
  journal   = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  year      = {2016},
  volume    = {36},
  number    = {5},
  pages     = {869--882},
  publisher = {IEEE},
}

@InProceedings{ben2004embedding,
  author    = {Ben-David, Shoham and Fisman, Dana and Ruah, Sitvanit},
  title     = {Embedding Finite Automata within regular Expressions.},
  booktitle = {ISoLA (Preliminary proceedings)},
  year      = {2004},
  pages     = {175--180},
}

@Article{leucker2009brief,
  author    = {Leucker, Martin and Schallhart, Christian},
  title     = {A brief account of runtime verification},
  journal   = {The journal of logic and algebraic programming},
  year      = {2009},
  volume    = {78},
  number    = {5},
  pages     = {293--303},
  publisher = {Elsevier},
}

@InProceedings{vardi2001branching,
  author       = {Vardi, Moshe Y},
  title        = {Branching vs. linear time: Final showdown},
  booktitle    = {International conference on tools and algorithms for the construction and analysis of systems},
  year         = {2001},
  pages        = {1--22},
  organization = {Springer},
  review       = {LTL vs CTL paper by Moshe Vardi},
}

@InProceedings{mukhopadhyay1978hardware,
  author    = {Mukhopadhyay, Amar},
  title     = {Hardware algorithms for nonnumeric computation},
  booktitle = {Proceedings of the 5th annual symposium on Computer architecture},
  year      = {1978},
  pages     = {8--16},
}

@InProceedings{lamport1983good,
  author    = {Lamport, Leslie},
  title     = {What good is temporal logic?},
  booktitle = {IFIP congress},
  year      = {1983},
  volume    = {83},
  pages     = {657--668},
}

@Book{rescher2012temporal,
  title     = {Temporal logic},
  publisher = {Springer Science \& Business Media},
  year      = {2012},
  author    = {Rescher, Nicholas and Urquhart, Alasdair},
  volume    = {3},
}

@InProceedings{6549828,
  author    = {Uchevler, B.N. and Svarstad, Kjetil},
  title     = {Assertion based verification using PSL-like properties in Haskell},
  booktitle = {2013 IEEE 16th International Symposium on Design and Diagnostics of Electronic Circuits \& Systems (DDECS)},
  year      = {2013},
  pages     = {254-257},
  doi       = {10.1109/DDECS.2013.6549828},
}

@InProceedings{10.1007/978-3-031-44267-4_25,
  author    = {Havelund, Klaud and Peled, Doron},
  title     = {Monitorability for Runtime Verification},
  booktitle = {Runtime Verification},
  year      = {2023},
  editor    = {Katsaros, Panagiotis and Nenzi, Laura},
  pages     = {447--460},
  address   = {Cham},
  publisher = {Springer Nature Switzerland},
  abstract  = {Runtime verification (RV) facilitates the formal analysis of execution traces. In particular, it permits monitoring the execution of a system and checking it against a temporal specification. Online RV observes, at any moment, a prefix of the complete monitored execution and is required to provide a verdict whether all the complete executions that share that prefix satisfy or falsify the specification. Not every property (and for every kind of verdict) lends itself to obtaining such an early verdict. Monitorability of a temporal property is defined as the ability to provide positive (success) or negative (failure) verdicts after observing a finite prefix of the execution. We classify temporal properties based on their monitorability and present related monitoring algorithms. A common practice in runtime verification is to concentrate on the class of safety properties, where a failure to satisfy the specification can always be detected in finite time. In the second part of the paper we concentrate on monitoring safety properties and their place among the other classes of properties in terms of algorithms and complexity.},
  isbn      = {978-3-031-44267-4},
}

@Article{cox2009regular,
  author  = {Cox, Russ},
  title   = {Regular expression matching: the virtual machine approach},
  journal = {URL: http://swtch. com/rsc/regexp/regexp2. html},
  year    = {2009},
}

@Article{brzozowski1964derivatives,
  author    = {Brzozowski, Janusz A},
  title     = {Derivatives of regular expressions},
  journal   = {Journal of the ACM (JACM)},
  year      = {1964},
  volume    = {11},
  number    = {4},
  pages     = {481--494},
  publisher = {ACM New York, NY, USA},
}

@Article{antimirov1996partial,
  author    = {Antimirov, Valentin},
  title     = {Partial derivatives of regular expressions and finite automaton constructions},
  journal   = {Theoretical Computer Science},
  year      = {1996},
  volume    = {155},
  number    = {2},
  pages     = {291--319},
  publisher = {Elsevier},
}

@Article{schutzenberger1965finite,
  author  = {Sch{\"u}tzenberger, Marcel Paul},
  title   = {On finite monoids having only trivial subgroups},
  journal = {Inf. Control.},
  year    = {1965},
  volume  = {8},
  number  = {2},
  pages   = {190--194},
}

@Book{kamp1968tense,
  title     = {Tense logic and the theory of linear order},
  publisher = {University of California, Los Angeles},
  year      = {1968},
  author    = {Kamp, Johan Anthony Wilem},
}

@article{DBLP:journals/jucs/Sheeran05,
  author       = {Mary Sheeran},
  title        = {Hardware Design and Functional Programming: a Perfect Match},
  journal      = {J. Univers. Comput. Sci.},
  volume       = {11},
  number       = {7},
  pages        = {1135--1158},
  year         = {2005},
  url          = {https://doi.org/10.3217/jucs-011-07-1135},
  doi          = {10.3217/JUCS-011-07-1135},
  timestamp    = {Thu, 07 Sep 2023 16:42:05 +0200},
  biburl       = {https://dblp.org/rec/journals/jucs/Sheeran05.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@Comment{jabref-meta: databaseType:bibtex;}
